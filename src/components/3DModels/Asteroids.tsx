/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 asteroidOptimized.glb -t -T -o Asteroid.tsx 
Files: asteroidOptimized.glb [20.01MB] > C:\Users\mateu\OneDrive\Documentos\Coding\Schorn.io Codebase\space_traveler\asteroidOptimized-transformed.glb [803.15KB] (96%)
Author: PeterMikielewicz (https://sketchfab.com/PeterMikielewicz)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/asteroid-with-minerals-1cf93f26dbc34a08a31367ea8929117f
Title: Asteroid with minerals
*/

// import * as THREE from "three";
import { Text, useGLTF } from "@react-three/drei";
// import { GLTF } from "three-stdlib";
import { PATH_3D_MODELS } from "./path";
import { useFrame } from "@react-three/fiber";
import { useGameStore } from "../../store/useGameStore";
import { toPosition } from "../../utils/toPosition";
import { schornColors } from "../../constants/schornColors";
import { fontSize } from "../../utils/fontSizes";

// type GLTFResult = GLTF & {
//   nodes: {
//     Object_2: THREE.Mesh;
//   };
//   materials: {
//     ["defaultMat.003"]: THREE.MeshStandardMaterial;
//   };
// };

export function Asteroids() {
  const asteroids = useGameStore((state) => state.asteroids);

  // const { nodes, materials } = useGLTF(
  //   `${PATH_3D_MODELS}/asteroidOptimized-transformed.glb`
  // ) as GLTFResult;

  useFrame(() => {
    asteroids.forEach(({ ref, rotationSpeed, speed }) => {
      if (ref.current) {
        ref.current.rotation.z += speed;
        ref.current.rotation.x += rotationSpeed.x;
        ref.current.rotation.y += rotationSpeed.y;

        ref.current.position.z += 0.5;
      }
    });
  });

  return (
    <group>
      {asteroids.map(({ position, size, ref, id }, index) => {
        return (
          <group position={toPosition(position)}>
            <mesh
              ref={ref}
              key={index}
              scale={size}
              // geometry={nodes.Object_2.geometry}
              // material={materials["defaultMat.003"]}
            >
              <dodecahedronGeometry args={[0.4, 0]} />
              <meshStandardMaterial
                color={schornColors.purpleMagenta}
                roughness={0.2}
                metalness={0.8}
              />
            </mesh>
          </group>
        );
      })}
    </group>
  );
}
useGLTF.preload(`${PATH_3D_MODELS}/asteroidOptimized-transformed.glb`);
